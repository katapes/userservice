openapi: 3.0.2
info:
  title: Api Documentation
  description: "Explore Spring Boot, Gradle, Yaml configs and all that jazz."
  termsOfService: http://swagger.io/terms/
  contact:
    email: raman.lisiankou@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1-SNAPSHOT
servers:
  - url: 'http://localhost:8080'
tags:
  - name: address
    description: Operations about addresses
    externalDocs:
      description: Find out more about our store
      url: http://swagger.io
  - name: user
    description: Operations about users
    externalDocs:
      description: Find out more about our store
      url: http://swagger.io

paths:
  /address:
    get:
      tags:
        - address
      summary: getAllAddresses
      operationId: getAllAddresses
      responses:
        '200':
          description: 'Details about Addresses'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addresses'

        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /address/{id}:
    get:
      tags:
        - address
      summary: getAddress
      operationId: getAddress
      parameters:
        - name: id
          in: path
          description: The identifier of the address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Details about Address'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /address/{id}/users:
    get:
      tags:
        - address
      summary: getUsersByAddress
      operationId: getUsersByAddress
      parameters:
        - name: id
          in: path
          description: The identifier of the address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Details about Users'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /address/city/{name}:
    get:
      tags:
        - address
      summary: getUsersByCity
      operationId: getUsersByCity
      parameters:
        - name: name
          in: path
          description: The name of the city
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Details about Users'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /user:
    get:
      tags:
        - user
      summary: getAllUsers
      operationId: getAllUsers
      responses:
        '200':
          description: 'Details about Users'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - user
      summary: createUser
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    address:
                      type: object
                      properties:
                        city:
                          type: string
                        other:
                          type: string
                        region:
                          type: string
                        street:
                          type: string
                    name:
                      type: string
                  example:
                    address:
                      city: Minsk
                      other: house 3
                      region: north
                      street: Indep str
                    name: Jake

                - type: object
                  properties:
                    address:
                      type: object
                      properties:
                        id:
                          type: integer
                    name:
                      type: string
                  example:
                    address:
                    id: 1
                    name: Jake
      responses:
        '201':
          description: 'Create a new User'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /user/{id}:
    get:
      tags:
        - user
      summary: getUserById
      operationId: getUserById
      parameters:
        - name: id
          in: path
          description: The identifier of the User
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Details about Users'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /user/{id}/balance:
    get:
      tags:
        - user
      summary: getUserByBalance
      operationId: getUserByBalance
      parameters:
        - name: id
          in: path
          description: The identifier of the User
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Details about Users'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - user
      summary: changeUserBalance
      operationId: changeUserBalance
      parameters:
        - name: id
          in: path
          description: The identifier of the User
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: number
                  format: double
              example:
                value: 123.34
      responses:
        '200':
          description: 'Details about Users'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Addresses:
      description: An array of Address
      type: array
      items:
        $ref: '#/components/schemas/Address'
      minItems: 0

    Address:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
        other:
          type: string
        street:
          type: string
        city:
          type: string
        region:
          type: string

    Users:
      description: An array of Users
      type: array
      items:
        $ref: '#/components/schemas/User'
      minItems: 0

    User:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        balance:
          type: number
          format: double

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string